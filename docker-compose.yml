services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      MAX_HOPS: 4
      POSTGRES_DB: freight_forwarder_production
      POSTGRES_USER: freight_user
      POSTGRES_PASSWORD: freight_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freight_user -d freight_forwarder_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    restart: unless-stopped
    environment:
      DATABASE_HOST: db
      DATABASE_USER: freight_user
      DATABASE_PASSWORD: freight_password
      DATABASE_NAME: freight_forwarder_production
      RAILS_ENV: production
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-your-secret-key-base-change-this-in-production}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    stdin_open: true
    tty: true

  # CLI service for running freight finder
  freight_finder:
    build: .
    environment:
      DATABASE_HOST: db
      DATABASE_USER: freight_user
      DATABASE_PASSWORD: freight_password
      DATABASE_NAME: freight_forwarder_production
      RAILS_ENV: production
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-your-secret-key-base-change-this-in-production}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: ruby bin/freight_finder.rb
    stdin_open: true
    tty: true
    profiles:
      - cli

volumes:
  postgres_data:
